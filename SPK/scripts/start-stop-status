#!/bin/sh

# Package
PACKAGE="RoonServer"
DNAME="RoonServer"
USER="root"
ROON_DIR="/var/packages/${PACKAGE}/target"
ROON_LOG_DIR="${ROON_DIR}/Roon_Database/RoonServer/Logs"
ROON_LIB_DIR="${ROON_DIR}/lib"

ARCH=$(uname -m)
PID=`( ps -Awwo pid,args | grep "[R]oonServer " | awk '{print $1}' )`



start_daemon ()
{
    LIBASOUND="/var/packages/RoonServer/target/lib"

    # Launch the service in the background.
    su - root -c "umask 000; export ROON_DATAROOT=${ROON_DIR}/Roon_Database; export LD_LIBRARY_PATH=${ROON_LIB_DIR}; ${ROON_DIR}/RoonServer/start.sh &"
}

stop_daemon ()
{
    kill $PID
    wait_for_status 1 20 || kill -9 $PID
}

daemon_status ()
{
    ## Check with ps command if RoonServer is running. If RoonServer updates itself, the PID changes.

    if [ "$PID" != ""} ] && kill -0 $PID > /dev/null 2>&1; then
        return
    fi
    
    return 1
}

wait_for_status ()
{
    counter=$2
    while [ ${counter} -gt 0 ]; do
        daemon_status
        [ $? -eq $1 ] && return
        let counter=counter-1
        sleep 1
    done
    return 1
}


case $1 in
    start)
        if daemon_status; then
            echo ${DNAME} is already running
        else
            echo Starting ${DNAME} ...
            start_daemon
        fi
        ;;
    stop)
        if daemon_status; then
            echo Stopping ${DNAME} ...
            stop_daemon
        else
            echo ${DNAME} is not running
        fi
        ;;
    status)
        if daemon_status; then
            echo ${DNAME} is running
            exit 0
        else
            echo ${DNAME} is not running
            exit 1
        fi
        ;;
    log)
        echo `( ls -td ${ROON_LOG_DIR}/* | head -1 )`
        ;;
    *)
        exit 1
        ;;
esac