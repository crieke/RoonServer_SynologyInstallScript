#!/bin/sh

# Package
PACKAGE="RoonServer"
DNAME="RoonServer"
# Others
SSS="/var/packages/${PACKAGE}/scripts/start-stop-status"
ROON_PKG_URL="http://download.roonlabs.com/builds/RoonServer_linuxx64.tar.bz2"

preinst ()
{
    if [ "${SYNOPKG_PKG_STATUS}" != "UPGRADE" ]; then
        curl "${ROON_PKG_URL}" | tar xvj -C ${SYNOPKG_PKGINST_TEMP_DIR}
    fi

    exit 0
}

postinst ()
{
    # Check user entry for external Database location
    if [ "${SYNOPKG_PKG_STATUS}" != "UPGRADE" ] && [ "${wizard_dbimport_path}" != "" ] && [ -d "${wizard_dbimport_path}/Roon_Database" ]; then
        cp -r "${wizard_dbimport_path}/Roon_Database" "${SYNOPKG_PKGDEST}/Roon_Database"
        sync
    fi

    exit 0
}

preuninst ()
{
    # Stop the package
    ${SSS} stop > /dev/null

    # Check for if database should be exported
    EXPORT_DB_PATH="${wizard_dbexport_path}"/Roon_Database_"$(date +%y%m%d_%H%M%S)"
    if [ "$wizard_dbexport_path" != "" ] && [ "${SYNOPKG_PKG_STATUS}" != "UPGRADE" ]; then
        if [ -d "${wizard_dbexport_path}" ] && [ ! -d "${EXPORT_DB_PATH}" ]; then 
            mv "${SYNOPKG_PKGDEST}/Roon_Database" "${EXPORT_DB_PATH}"
            chown -R admin:users "${EXPORT_DB_PATH}"
            sync
	    echo "Roon-Database exported."
        else
            echo "Roon-Database could not be exported!"
            exit 1
        fi
    fi

    exit 0
}

postuninst ()
{

    # Delete Package directory if it contains nothing.
    if [ ! -d "$(ls -A /usr/syno/etc/packages/${PACKAGE})" ]; then
        rm -Rf /usr/syno/etc/packages/${PACKAGE}
    fi

    exit 0
}

preupgrade ()
{
    mv ${SYNOPKG_PKGDEST}/Roon_Database ${SYNOPKG_PKGINST_TEMP_DIR}/Roon_Database
    mv ${SYNOPKG_PKGDEST}/RoonServer ${SYNOPKG_PKGINST_TEMP_DIR}/RoonServer
    exit 0
}

postupgrade ()
{
    exit 0
}
